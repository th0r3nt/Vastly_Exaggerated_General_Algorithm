# Когда-нибудь, когда-нибудь

# Базовый скелет
import schedule
import time
import random
from assistant_brain.proactive_logic import run_proactive_check # Эту функцию нужно будет создать

def start_scheduler():
    # Запускать проактивную проверку каждые 5-15 минут
    schedule.every(random.randint(5, 15)).minutes.do(run_proactive_check)

    while True:
        schedule.run_pending()
        time.sleep(1)

        # В main.py:
        # ...
        # scheduler_thread = threading.Thread(target=start_scheduler, daemon=True)
        # scheduler_thread.start()
        # ...
        # # Теперь основной цикл while True: time.sleep(1) не нужен,
        # # программа будет жить, пока работают потоки.



# Анализ погоды. Что делает: Через API погоды (например, OpenWeatherMap) проверяет прогноз на сегодня и завтра (Изменено: передавать эти данные в отдельную функцию "ты заскучала, ...", так будет более эффективно)
# Анализ новостей. Что делает: Проверяет новости на наличие важных событий, которые могут повлиять на планы пользователя (Изменено: передавать эти данные в отдельную функцию "ты заскучала, ...", так будет более эффективно)
# Анализ календаря. Что делает: Проверяет календарь пользователя на наличие предстоящих событий или встреч (Изменено: передавать эти данные в отдельную функцию "ты заскучала, ...", так будет более эффективно)
# Анализ системных ресурсов. Что делает: Мониторит использование CPU, памяти и диска, чтобы предупредить пользователя о возможных проблемах (Изменено: передавать эти данные в отдельную функцию "ты заскучала, ...", так будет более эффективно)




# В main.py:
# ...
# scheduler_thread = threading.Thread(target=start_scheduler, daemon=True)
# scheduler_thread.start()
# ...
# # Теперь основной цикл while True: time.sleep(1) не нужен,
# # программа будет жить, пока работают потоки.

